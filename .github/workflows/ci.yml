name: Build

on: [push]

jobs:
  name: ${{ matrix.os_short }} - Build
  runs-on: ${{ matrix.os }}
  strategy:
    fail-fast: false
    matrix:
      os: [ubuntu-latest, windows-latest]
    include:
      - os: ubuntu-latest
        os_short: Lin
      - os: windows-latest
        os_short: Win
  steps:
    - name: Checkout SourceMod
      uses: actions/checkout@v3
      with: 
        repository: alliedmodders/sourcemod
        path: sourcemod
        submodules: recursive
    - name: Checkout CSGO SDK
      uses: actions/checkout@v3
      with:
        repository: alliedmodders/hl2sdk
        ref: csgo
        path: hl2sdk/csgo
    - name: Checkout MetaMod
      uses: actions/checkout@v3
      with:
        repository: alliedmodders/metamod-source
        submodules: recursive
    - name: Checkout Project
      uses: actions/checkout@v3
      with:
        fetch-depth: 99999
        path: ${{ github.workspace }}
    - name: Build
      working-directory: ${{ github.workspace }}
      run: |
        $CPUCore=$(Get-WmiObject -Class Win32_Processor | Select-Object -Property Name, Number*).NumberOfCores
        mkdir build
        cd build
        cmake -G "Visual Studio 17 2022" -A Win32 -DCMAKE_BUILD_TYPE=Release -DTARGET_ARCH=x86 -DHL2SDK_ENGINE_NAME=csgo ..
        cmake --build . --config Release -- /m:$CPUCore


    # - name: Checkout project
    #   uses: actions/checkout@v3
    #   with:
    #     fetch-depth: 9999
    #     path: ${{ github.workspace }}
    # - name: Build

# name: Build

# on: [push]

# jobs:

#   build:
#     strategy:
#       matrix:
#         os: [ubuntu-latest, windows-latest]
#     runs-on: ${{ matrix.os }}

#     steps:
#       - uses: actions/checkout@v1

#       - name: Installing packages, and cache everything
#         uses: johnwason/vcpkg-action@v3
#         if: matrix.os == 'windows-latest'
#         with:
#           pkgs: boost-date-time boost-system openssl
#           triplet: x86-windows-static

#       # - uses: johnwason/vcpkg-action@v3
#       #   runs-on: windows-latest
#       #   with:
#       #     pkgs: boost-date-time boost-system openssl
#       #     triplet: x86-windows-static


#       # - name: Build - Rust
#       #   run: |
#       #     cargo --version
#       #     rustc --version
#       #     cargo build --release
      
#       - name: Build - CXX
#         if: matrix.os == 'windows-latest'
#         run: |
#           mkdir build
#           cd build
#           cmake -G "Visual Studio 17 2022" -A Win32 -DCMAKE_BUILD_TYPE=Release -DCMAKE_TOOLCHAIN_FILE=${{ github.workspace }}/vcpkg/scripts/buildsystems/vcpkg.cmake -DVCPKG_TARGET_TRIPLET=x86-windows-static ..
#           cmake --build . --config Release